jobs:
  deploy:
    env:
      MVN_ARGS: -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
    if: '!contains(github.event.head_commit.message, ''skip ci'')'
    name: Deploy and Publish
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - continue-on-error: true
      name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - continue-on-error: true
      name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '8'
    - continue-on-error: true
      name: Build Java package
      run: mvn verify -fae -DskipITs -Dskip.unit.tests $MVN_ARGS
    - continue-on-error: true
      name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 20
    - continue-on-error: true
      name: Install Semantic Release dependencies
      run: 'pip3 install --user bump2version

        npm install -g semantic-release

        npm install -g @semantic-release/changelog

        npm install -g @semantic-release/exec

        npm install -g @semantic-release/git

        npm install -g @semantic-release/github

        npm install -g @semantic-release/commit-analyzer

        npm install -g @semantic-release/release-notes-generator

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      id: is_new_release
      name: Check if semantic release generated a release
      run: 'echo ::set-output name=IS_NEW_RELEASE::$(npx semantic-release --dry-run
        | grep -c -i "Published release")

        echo "The full TAG - ${{ github.ref }}"

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      id: next_release
      if: ${{ steps.is_new_release.outputs.IS_NEW_RELEASE == '1' }}
      name: Get the nextRelease.version from semantic release
      run: echo ::set-output name=NEXT_RELEASE::$(npx semantic-release --dry-run |
        grep -oP "Published release \K[0-9]+\.[0-9]+\.[0-9]+")
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      if: ${{ steps.is_new_release.outputs.IS_NEW_RELEASE == '1' }}
      name: Publish to Git Releases and Tags
      run: npx semantic-release
    - continue-on-error: true
      env:
        GHA_TAG: refs/tags/v${{ steps.next_release.outputs.NEXT_RELEASE }}
        GPG_KEYNAME: ${{ secrets.SIGNING_KEY }}
        GPG_PASSPHRASE: ${{ secrets.SIGNING_PASSWORD }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
      if: ${{ steps.next_release.outputs.NEXT_RELEASE }}
      name: Publish to Maven Central
      run: 'echo "The NEXT_RELEASE - ${{ steps.next_release.outputs.NEXT_RELEASE }}"

        echo -e "\n\033[0;35mCommand: setupSigning"

        build/setupSigning_gha.sh

        echo -e "\n\033[0;35mCommand: setMavenVersion"

        build/setMavenVersion_gha.sh

        echo -e "\n\033[0;35mCommand: mvn deploy"

        mvn deploy --settings build/.travis.settings.xml -DskipITs -Dskip.unit.tests
        -P central $MVN_ARGS

        '
    - continue-on-error: true
      env:
        GHA_BRANCH: ${{ github.ref }}
        GHA_BUILD_NUMBER: ${{ github.run_number }}
        GHA_COMMIT: ${{ github.sha }}
        GHA_JOB_NUMBER: ${{ github.job_number }}
        GHA_PULL_REQUEST: ${{ github.event.number }}
        GHA_REPO_SLUG: ${{ github.repository }}
        GHA_TAG: refs/tags/v${{ steps.next_release.outputs.NEXT_RELEASE }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      if: ${{ steps.next_release.outputs.NEXT_RELEASE }}
      name: Publish Java docs
      run: 'build/setMavenVersion_gha.sh

        mvn clean javadoc:aggregate $MVN_ARGS

        build/publish_gha.sh

        '
    - continue-on-error: true
      if: ${{ steps.is_new_release.outputs.IS_NEW_RELEASE == '0' }}
      name: SKIP - Publish/Deploy to Git and Maven Central
      run: 'echo -e "\n\033[0;35mCommand: Skipping the deployment because semantic
        release has determined there are no relevant changes that warrent a new release.\n"

        '
name: Deploy and Publish
on:
  repository_dispatch:
    types: trigger-ga___deploy.yml
